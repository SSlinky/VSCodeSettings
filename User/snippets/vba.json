{
	// Place your snippets for vba here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Public Property Let": {
		"prefix": "proplet",
		"description": "Property let and get with backing store",
		"body": [
			"Private m${1:PropertyName} As ${2:PropertyType}",
			"Public Property Let $1(var As $2)",
			"Attribute $1.VB_Description = \"${3:Dosctring}.\"",
			"'   $3.",
			"    m$1 = var",
			"End Property",
			"",
			"Public Property Get $1() As $2",
			"    $1 = m$1",
			"End Property",
			"",
			"$0"
		]
	},
	"Public Property Set": {
		"prefix": "propset",
		"description": "Property set and get with backing store",
		"body": [
			"Private m${1:PropertyName} As ${2:PropertyType}",
			"Public Property Set $1(var As $2)",
			"Attribute $1.VB_Description = \"${3:Dosctring}.\"",
			"'   $3.",
			"    Set m$1 = var",
			"End Property",
			"",
			"Public Property Get $1() As $2",
			"    Set $1 = m$1",
			"End Property",
			"",
			"$0"
		]
	},
	"Public Property Get": {
		"prefix": "propget",
		"description": "Property get only",
		"body": [
			"Public Property Get ${1:PropertyName}() As ${2:PropertyType}",
			"Attribute $1.VB_Description = \"${3:Dosctring}.\"",
			"'   $3.",
			"    $0",
			"End Property",
			"",
		]
	},
	"Subroutine": {
		"prefix": "sub",
		"description": "Subroutine",
		"body": [
			"${1:Public }Sub ${2:Identifier}($3)",
			"Attribute $2.VB_Description = \"${4:Dosctring}.\"",
			"'   $4.",
			"'",
			"'   Args:",
			"'       param1:",
			"'",
			"'   Raises:",
			"'",
			"",
			"    $0",
			"End Sub"
		]
	},
	"Function": {
		"prefix": "func",
		"description": "Function",
		"body": [
			"${1:Public }Function ${2:Identifier}($3) As $4",
			"Attribute $2.VB_Description = \"${5:Dosctring}.\"",
			"'   $5.",
			"'",
			"'   Args:",
			"'       param1:",
			"'",
			"'   Returns:",
			"'",
			"'   Raises:",
			"'",
			"    Dim result As $4",
			"    $0",
			"",
			"    $2 = result",
			"End Function"
		]
	},
	"ForLoop": {
		"prefix": "fori",
		"description": "For Loop",
		"body": [
			"${4:Dim $1 As Long}",
			"For ${1:i} = ${2:low} To ${3:high}",
			"    $0",
			"Next $1"
		]
	},
	"ForEachLoop": {
		"prefix": "foreach",
		"description": "For Each Loop",
		"body": [
			"For Each ${1:object} In ${2:collection}",
			"    $0",
			"Next $1"
		]
	},
	"Case": {
		"prefix": "case",
		"description": "Select Case",
		"body": [
			"Select Case $1",
			"    Case Is = $2:",
			"        $0",
			"    Case Else:",
			"End Select"
		]
	},
	"Event": {
		"prefix": "event",
		"description": "Event",
		"body": [
			"Public Event ${1:Identifier}($3)"
		]
	},
	"Constructor": {
		"prefix": "ctor",
		"description": "Class_Initialize",
		"body": [
			"Private Sub Class_Initialize()",
			"    $0",
			"End Sub"
		]
	},
	"Destructor": {
		"prefix": "dtor",
		"description": "Class_Terminate",
		"body": [
			"Private Sub Class_Terminate()",
			"    $0",
			"End Sub"
		]
	},
	"Base Class Template": {
		"prefix": "class",
		"description": "Basic class",
		"body": [
			"VERSION 1.0 CLASS",
			"BEGIN",
			"  MultiUse = -1  'True",
			"END",
			"Attribute VB_Name = \"${1:ClassName}\"",
			"Attribute VB_Description = \"${2:Class description goes here}\"",
			"Attribute VB_GlobalNameSpace = False",
			"Attribute VB_Creatable = False",
			"Attribute VB_PredeclaredId = False",
			"Attribute VB_Exposed = False",
			"' Copyright 2023 Sam Vanderslink",
			"' ",
			"' Permission is hereby granted, free of charge, to any person obtaining a copy ",
			"' of this software and associated documentation files (the \"Software\"), to deal ",
			"' in the Software without restriction, including without limitation the rights ",
			"' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell ",
			"' copies of the Software, and to permit persons to whom the Software is ",
			"' furnished to do so, subject to the following conditions:",
			"' ",
			"' The above copyright notice and this permission notice shall be included in ",
			"' all copies or substantial portions of the Software.",
			"' ",
			"' THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR ",
			"' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, ",
			"' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE ",
			"' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER ",
			"' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING ",
			"' FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS ",
			"' IN THE SOFTWARE.",
			"",
			"Option Explicit",
			"$0",
			"'-------------------------------------------------------------------------------",
			"'   Class: $1",
			"'   $2",
			"'-------------------------------------------------------------------------------",
			"",
			"' Enums",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Events",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Private Backing Store",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Properties",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Constructor",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Methods",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Helpers",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Event Handlers",
			"'-------------------------------------------------------------------------------",
			"",
			"",
			"' Interface Implementation",
			"'-------------------------------------------------------------------------------",
			"",
			"",
		]
	},
	"Base Module Template": {
		"prefix": "module",
		"description": "Basic module",
		"body": [
			"Attribute VB_Name = \"${1:ModuleName}\"",
			"' Copyright 2023 Sam Vanderslink",
			"' ",
			"' Permission is hereby granted, free of charge, to any person obtaining a copy ",
			"' of this software and associated documentation files (the \"Software\"), to deal ",
			"' in the Software without restriction, including without limitation the rights ",
			"' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell ",
			"' copies of the Software, and to permit persons to whom the Software is ",
			"' furnished to do so, subject to the following conditions:",
			"' ",
			"' The above copyright notice and this permission notice shall be included in ",
			"' all copies or substantial portions of the Software.",
			"' ",
			"' THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR ",
			"' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, ",
			"' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE ",
			"' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER ",
			"' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING ",
			"' FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS ",
			"' IN THE SOFTWARE.",
			"",
			"Option Explicit",
			"$0"
		]
	},
	"Unit Test Template": {
		"prefix": "test",
		"description": "Unit test basic template",
		"body": [
			"Private Function TestList_${1:Identifier}() As TestResult",
			"Attribute TestList_$1.VB_Description = \"${2:Dosctring}.\"",
			"'   $2.",
			"    Dim tr As New TestResult",
			"",
			"'   Arrange",
			"    $0",
			"",
			"'   Act",
			"",
			"",
			"'   Assert",
			"",
			"",
			"Finally:",
			"    Set TestList_$1 = tr",
			"End Function"
		]
	}
}
